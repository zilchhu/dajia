{"id":"../node_modules/flatten/index.js","dependencies":[{"name":"C:\\Users\\Administrator\\Documents\\10\\package.json","includedInParent":true,"mtime":1607390250357},{"name":"C:\\Users\\Administrator\\Documents\\10\\node_modules\\flatten\\package.json","includedInParent":true,"mtime":1605848256108}],"generated":{"js":"module.exports = function flatten(list, depth) {\n  depth = (typeof depth == 'number') ? depth : Infinity;\n\n  if (!depth) {\n    if (Array.isArray(list)) {\n      return list.map(function(i) { return i; });\n    }\n    return list;\n  }\n\n  return _flatten(list, 1);\n\n  function _flatten(list, d) {\n    return list.reduce(function (acc, item) {\n      if (Array.isArray(item) && d < depth) {\n        return acc.concat(_flatten(item, d + 1));\n      }\n      else {\n        return acc.concat(item);\n      }\n    }, []);\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/flatten/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/flatten/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/flatten/index.js":"module.exports = function flatten(list, depth) {\n  depth = (typeof depth == 'number') ? depth : Infinity;\n\n  if (!depth) {\n    if (Array.isArray(list)) {\n      return list.map(function(i) { return i; });\n    }\n    return list;\n  }\n\n  return _flatten(list, 1);\n\n  function _flatten(list, d) {\n    return list.reduce(function (acc, item) {\n      if (Array.isArray(item) && d < depth) {\n        return acc.concat(_flatten(item, d + 1));\n      }\n      else {\n        return acc.concat(item);\n      }\n    }, []);\n  }\n};\n"},"lineCount":24}},"error":null,"hash":"0c81ad1fe6b622c4c28a3306618c423d","cacheData":{"env":{}}}